version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: actors
      POSTGRES_PASSWORD: actors_dev
      POSTGRES_DB: actors_platform
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U actors"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  mcp-server:
    build:
      context: .
      dockerfile: apps/mcp-server/Dockerfile
    environment:
      DATABASE_URL: postgresql://actors:actors_dev@postgres:5432/actors_platform
      REDIS_URL: redis://redis:6379
      NODE_ENV: development
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8080:8080"
    volumes:
      - ./apps/mcp-server:/app/apps/mcp-server
      - ./packages:/app/packages

  registry-api:
    build:
      context: .
      dockerfile: services/registry-api/Dockerfile
    environment:
      DATABASE_URL: postgresql://actors:actors_dev@postgres:5432/actors_platform
      REDIS_URL: redis://redis:6379
      NODE_ENV: development
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "3001:3001"
    volumes:
      - ./services/registry-api:/app/services/registry-api
      - ./packages:/app/packages

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001
      NEXT_PUBLIC_MCP_URL: http://localhost:8080
      DATABASE_URL: postgresql://actors:actors_dev@postgres:5432/actors_platform
      REDIS_URL: redis://redis:6379
    depends_on:
      - registry-api
      - mcp-server
    ports:
      - "3000:3000"
    volumes:
      - ./apps/web:/app/apps/web
      - ./packages:/app/packages

volumes:
  postgres_data:
  redis_data: